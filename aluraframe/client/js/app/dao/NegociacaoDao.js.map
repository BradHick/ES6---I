{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,gB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;+BAEKC,a;AACX,+BAAYC,UAAZ,EAAwB;AAAA;;AACtB,eAAKC,WAAL,GAAmBD,UAAnB;AACA,eAAKE,MAAL,GAAc,aAAd;AACD;;;;mCAEQC,U,EAAW;AAAA;;AAClB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;;AAErC,kBAAIC,UAAU,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,MAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACiBO,WADjB,CAC6B,MAAKP,MADlC,EAEiBQ,GAFjB,CAEqBP,UAFrB,CAAd;;AAIAI,sBAAQI,SAAR,GAAoB,aAAK;AACvBN;AACD,eAFD;;AAIAE,sBAAQK,OAAR,GAAkB,aAAK;AACrBC,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uBAAO,4BAAP;AACD,eAHD;AAKD,aAfM,CAAP;AAgBD;;;uCAGW;AAAA;;AACV,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,kBAAIY,SAAS,OAAKjB,WAAL,CACIO,WADJ,CACgB,CAAC,OAAKN,MAAN,CADhB,EAC+B,WAD/B,EAEIO,WAFJ,CAEgB,OAAKP,MAFrB,EAGIiB,UAHJ,EAAb;;AAKA,kBAAIC,cAAa,EAAjB;;AAEAF,qBAAOP,SAAP,GAAmB,aAAK;AACtB,oBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;AACA;AACA,oBAAGD,KAAH,EAAS;AACP,sBAAIE,OAAOF,MAAMG,KAAjB;AACAJ,8BAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAP,wBAAMQ,QAAN;AACD,iBAJD,MAIK;AACHxB,0BAAQe,WAAR;AACD;AACF,eAVD;;AAYAF,qBAAON,OAAP,GAAiB,aAAK;AACpBC,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uBAAO,wCAAP;AACD,eAHD;AAKD,aA1BM,CAAP;AA2BD;;;uCAGW;AAAA;;AACV,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAIC,UAAU,OAAKN,WAAL,CACGO,WADH,CACe,CAAC,OAAKN,MAAN,CADf,EAC8B,WAD9B,EAEGO,WAFH,CAEe,OAAKP,MAFpB,EAGG4B,KAHH,EAAd;;AAKAvB,sBAAQI,SAAR,GAAoB,aAAK;AACvBN,wBAAQ,mCAAR;AACD,eAFD;;AAIAE,sBAAQK,OAAR,GAAkB,aAAK;AACrBC,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uBAAO,yCAAP;AACD,eAHD;AAOD,aAjBM,CAAP;AAkBD","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoDao {\r\n  constructor(connection) {\r\n    this._connection = connection;\r\n    this._store = 'negociacoes';\r\n  }\r\n\r\n  adiciona(negociacao){\r\n    return new Promise((resolve, reject) =>{\r\n\r\n      let request = this._connection.transaction([this._store], 'readwrite')\r\n                                    .objectStore(this._store)\r\n                                    .add(negociacao);\r\n\r\n      request.onsuccess = e => {\r\n        resolve();\r\n      };\r\n\r\n      request.onerror = e => {\r\n        console.log(e.target.error);\r\n        reject('Não foi possível adicionar');\r\n      };\r\n\r\n    });\r\n  }\r\n\r\n\r\n  listaTodos(){\r\n    return new Promise((resolve, reject) => {\r\n\r\n      let cursor = this._connection\r\n                      .transaction([this._store], 'readwrite')\r\n                      .objectStore(this._store)\r\n                      .openCursor();\r\n\r\n      let negociacoes =[];\r\n\r\n      cursor.onsuccess = e => {\r\n        let atual = e.target.result;\r\n        //varrendo o banco e pegando os valores das negociações salvas\r\n        if(atual){\r\n          let dado = atual.value;\r\n          negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n          atual.continue();\r\n        }else{\r\n          resolve(negociacoes);\r\n        }\r\n      }\r\n\r\n      cursor.onerror = e => {\r\n        console.log(e.target.error);\r\n        reject('Não foi possível listar as negociações')\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n  apagaTodos(){\r\n    return new Promise((resolve, reject) => {\r\n      let request = this._connection\r\n                      .transaction([this._store], 'readwrite')\r\n                      .objectStore(this._store)\r\n                      .clear();\r\n\r\n      request.onsuccess = e => {\r\n        resolve('Negociações removidas com sucesso');\r\n      };\r\n\r\n      request.onerror = e => {\r\n        console.log(e.target.error);\r\n        reject('Não foi possível remover as negociações');\r\n      };\r\n\r\n\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n"]}